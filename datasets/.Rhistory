link.largest.ontop = TRUE)
# Base plot
chordDiagram(
x = data_long,
#grid.col = mycolor,
transparency = 0.25,
directional = 1,
direction.type = c("arrows", "diffHeight"),
diffHeight  = -0.04,
annotationTrack = "grid",
annotationTrackHeight = c(0.05, 0.1),
link.arr.type = "big.arrow",
link.sort = TRUE,
link.largest.ontop = TRUE)
# Add text and axis
circos.trackPlotRegion(
track.index = 1,
bg.border = NA,
panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
sector.index = get.cell.meta.data("sector.index")
# Add names to the sector.
circos.text(
x = mean(xlim),
y = 3.2,
labels = sector.index,
facing = "bending",
cex = 0.8
)
# Add graduation on axis
circos.axis(
h = "top",
major.at = seq(from = 0, to = xlim[2], by = ifelse(test = xlim[2]>10, yes = 2, no = 1)),
minor.ticks = 1,
major.tick.percentage = 0.5,
labels.niceFacing = FALSE)
}
)
data<170000
data<170000 = 0
data<170000 <- 0
data[data<170000] <- 0
data <- data[-1,-1:-2]
data[data<170000] <- 0
View(data)
data <- read_excel(file)
data <- data[-1,-1:-2]
data[data<170000] <- 0
View(data)
""""data
data.info
info(data)
data
data.summary()
summary(data)
data <- as.numeric(data)
data <- read_excel(file)
data <- data[-1,-1:-2]
View(data)
data <- as.numeric(data)
data <- as.numeric(data$DESTINATION)
data <- data[-1,-1:-2]
data <- data[-1,-1:-2]
data <- read_excel(file)
data <- as.numeric(data$...4)
data <- read_excel(file)
data <- data[-1,-1:-2]
View(data)
info(data)
type(data)
data <- as.numeric(data$...4)
data <- read_excel(file)
for (i in length(data)){
data[,i] <- as.numeric(data[,i])
}
data <- read_excel(file)
data <- data[-1,-1:-2]
for (i in length(data)){
data[,i] <- as.numeric(data[,i])
}
View(data)
data <- read_excel(file)
data <- data[-1,-1:-2]
data <- data[-1,-1:-2]
for (i in length(data)){
data[,i] <- as.numeric(unlist(data[,i]))
}
data <- read_excel(file)
data <- data[-1,-1:-2]
for (i in length(data)){
data[,i] <- as.numeric(unlist(data[,i]))
}
View(data)
data[data<170000] <- 0
data[data<170000] <- '0'
View(data)
data <- read_excel(file)
data <- data[-1,-1:-2]
for (i in length(data)){
data[,i] <- as.numeric(unlist(data[,i]))
data[data[,i] < 170000] <- 0
}
data <- read_excel(file)
data <- data[-1,-1:-2]
for (i in length(data)){
data[,i] <- as.numeric(unlist(data[,i]))
data[,i] < 170000 <- 0
}
data <- read_excel(file)
data <- data[-1,-1:-2]
for (i in length(data)){
data[,i] <- as.numeric(unlist(data[,i]))
zeros <- data[,i] < 170000
data[zeros, i] <- 0
}
View(data)
View(zeros)
str(data)
length(data)
data[,1]
data <- read_excel(file)
data <- data[-1,-1:-2]
colnames(data) <- 1:15
View(data)
for (i in 1:15){
data[,i] <- as.numeric(unlist(data[,i]))
zeros <- data[,i] < 170000
data[zeros, i] <- 0
}
View(data)
str(data)
colnames(data) <- c ("North America",
"Central America",
"South America",
"North Africa",
"Sub-Saharan Africa",
"Northern Europe",
"Western Europe",
"Southern Europe",
"Eastern Europe",
"Central Asia",
"Western Asia",
"South Asia",
"East Asia",
"South-East Asia",
"Oceania"   )
rownames(data) <- colnames(data)
# I need a long format
data_long <- data %>%
rownames_to_column %>%
gather(key = 'key', value = 'value', -rowname)
# parameters
circos.clear()
circos.par(start.degree = 90, gap.degree = 4, track.margin = c(-0.1, 0.1), points.overflow.warning = FALSE)
par(mar = rep(0, 4))
# color palette
mycolor <- viridis(10, alpha = 1, begin = 0, end = 1, option = "D")
mycolor <- mycolor[sample(1:10)]
# Base plot
chordDiagram(
x = data_long,
#grid.col = mycolor,
transparency = 0.25,
directional = 1,
direction.type = c("arrows", "diffHeight"),
diffHeight  = -0.04,
annotationTrack = "grid",
annotationTrackHeight = c(0.05, 0.1),
link.arr.type = "big.arrow",
link.sort = TRUE,
link.largest.ontop = TRUE)
# Add text and axis
circos.trackPlotRegion(
track.index = 1,
bg.border = NA,
panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
sector.index = get.cell.meta.data("sector.index")
# Add names to the sector.
circos.text(
x = mean(xlim),
y = 3.2,
labels = sector.index,
facing = "bending",
cex = 0.8
)
# Add graduation on axis
circos.axis(
h = "top",
major.at = seq(from = 0, to = xlim[2], by = ifelse(test = xlim[2]>10, yes = 2, no = 1)),
minor.ticks = 1,
major.tick.percentage = 0.5,
labels.niceFacing = FALSE)
}
)
c ("North America",
"Central America",
"South America",
"North Africa",
"Sub-Saharan Africa",
"Northern Europe",
"Western Europe",
"Southern Europe",
"Eastern Europe",
"Central Asia",
"Western Asia",
"South Asia",
"East Asia",
"South-East Asia",
"Oceania"   )
source('~/.active-rstudio-document', echo=TRUE)
# Add graduation on axis
circos.axis(
h = "top",
major.at = seq(from = 0, to = xlim[2], by = ifelse(test = xlim[2]>10, yes = 2, no = 1)),
minor.ticks = 1,
major.tick.percentage = 0.5,
labels.niceFacing = FALSE)
data <- read_excel(file)
data <- data[-1,-1:-2]
colnames(data) <- 1:15
for (i in 1:15){
data[,i] <- as.numeric(unlist(data[,i]))
zeros <- data[,i] < 170000
data[zeros, i] <- 0
}
colnames(data) <- c ("North America",
"Central America",
"South America",
"North Africa",
"Sub-Saharan Africa",
"Northern Europe",
"Western Europe",
"Southern Europe",
"Eastern Europe",
"Central Asia",
"Western Asia",
"South Asia",
"East Asia",
"South-East Asia",
"Oceania"   )
rownames(data) <- colnames(data)
# I need a long format
data_long <- data %>%
rownames_to_column %>%
gather(key = 'key', value = 'value', -rowname)
View(data_long)
# parameters
circos.clear()
circos.par(start.degree = 90, gap.degree = 4, track.margin = c(-0.1, 0.1), points.overflow.warning = FALSE)
# color palette
mycolor <- viridis(10, alpha = 1, begin = 0, end = 1, option = "D")
mycolor <- mycolor[sample(1:10)]
# Base plot
chordDiagram(
x = data_long,
#grid.col = mycolor,
transparency = 0.25,
directional = 1,
direction.type = c("arrows", "diffHeight"),
diffHeight  = -0.04,
annotationTrack = "grid",
annotationTrackHeight = c(0.05, 0.1),
link.arr.type = "big.arrow",
link.sort = TRUE,
link.largest.ontop = TRUE)
# Add text and axis
circos.trackPlotRegion(
track.index = 1,
bg.border = NA,
panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
sector.index = get.cell.meta.data("sector.index")
# Add names to the sector.
circos.text(
x = mean(xlim),
y = 3.2,
labels = sector.index,
facing = "bending",
cex = 0.8
)
# Add graduation on axis
circos.axis(
h = "top",
major.at = seq(from = 0, to = xlim[2], by = ifelse(test = xlim[2]>10, yes = 2, no = 1)),
minor.ticks = 1,
major.tick.percentage = 0.5,
labels.niceFacing = FALSE)
}
)
data <- read_excel(file)
data <- data[-1,-1:-2]
colnames(data) <- 1:15
for (i in 1:15){
data[,i] <- as.numeric(unlist(data[,i]))
zeros <- data[,i] < 170000
data[zeros, i] <- 1
}
colnames(data) <- c ("North America",
"Central America",
"South America",
"North Africa",
"Sub-Saharan Africa",
"Northern Europe",
"Western Europe",
"Southern Europe",
"Eastern Europe",
"Central Asia",
"Western Asia",
"South Asia",
"East Asia",
"South-East Asia",
"Oceania"   )
rownames(data) <- colnames(data)
# I need a long format
data_long <- data %>%
rownames_to_column %>%
gather(key = 'key', value = 'value', -rowname)
# parameters
circos.clear()
circos.par(start.degree = 90, gap.degree = 4, track.margin = c(-0.1, 0.1), points.overflow.warning = FALSE)
par(mar = rep(0, 4))
# color palette
mycolor <- viridis(10, alpha = 1, begin = 0, end = 1, option = "D")
mycolor <- mycolor[sample(1:10)]
# Base plot
chordDiagram(
x = data_long,
#grid.col = mycolor,
transparency = 0.25,
directional = 1,
direction.type = c("arrows", "diffHeight"),
diffHeight  = -0.04,
annotationTrack = "grid",
annotationTrackHeight = c(0.05, 0.1),
link.arr.type = "big.arrow",
link.sort = TRUE,
link.largest.ontop = TRUE)
# Add text and axis
circos.trackPlotRegion(
track.index = 1,
bg.border = NA,
panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
sector.index = get.cell.meta.data("sector.index")
# Add names to the sector.
circos.text(
x = mean(xlim),
y = 3.2,
labels = sector.index,
facing = "bending",
cex = 0.8
)
# Add graduation on axis
circos.axis(
h = "top",
major.at = seq(from = 0, to = xlim[2], by = ifelse(test = xlim[2]>10, yes = 2, no = 1)),
minor.ticks = 1,
major.tick.percentage = 0.5,
labels.niceFacing = FALSE)
}
)
data <- read_excel(file)
data <- data[-1,-1:-2]
colnames(data) <- 1:15
for (i in 1:15){
data[,i] <- as.numeric(unlist(data[,i]))
zeros <- data[,i] < 170000
data[zeros, i] <- 1
}
colnames(data) <- c ("North America",
"Central America",
"South America",
"North Africa",
"Sub-Saharan Africa",
"Northern Europe",
"Western Europe",
"Southern Europe",
"Eastern Europe",
"Central Asia",
"Western Asia",
"South Asia",
"East Asia",
"South-East Asia",
"Oceania"   )
rownames(data) <- colnames(data)
# I need a long format
data_long <- data %>%
rownames_to_column %>%
gather(key = 'key', value = 'value', -rowname)
data_long$value <. as.vector(data_long$values)
# parameters
circos.clear()
data_long$value <- as.vector(data_long$values)
data_long$value <- as.vector(data_long$value)
# parameters
circos.clear()
circos.par(start.degree = 90, gap.degree = 4, track.margin = c(-0.1, 0.1), points.overflow.warning = FALSE)
par(mar = rep(0, 4))
# color palette
mycolor <- viridis(10, alpha = 1, begin = 0, end = 1, option = "D")
mycolor <- mycolor[sample(1:10)]
# Base plot
chordDiagram(
x = data_long,
#grid.col = mycolor,
transparency = 0.25,
directional = 1,
direction.type = c("arrows", "diffHeight"),
diffHeight  = -0.04,
annotationTrack = "grid",
annotationTrackHeight = c(0.05, 0.1),
link.arr.type = "big.arrow",
link.sort = TRUE,
link.largest.ontop = TRUE)
# Add text and axis
circos.trackPlotRegion(
track.index = 1,
bg.border = NA,
panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
sector.index = get.cell.meta.data("sector.index")
# Add names to the sector.
circos.text(
x = mean(xlim),
y = 3.2,
labels = sector.index,
facing = "bending",
cex = 0.8
)
# Add graduation on axis
circos.axis(
h = "top",
major.at = seq(from = 0, to = xlim[2], by = ifelse(test = xlim[2]>10, yes = 2, no = 1)),
minor.ticks = 1,
major.tick.percentage = 0.5,
labels.niceFacing = FALSE)
}
)
View(data_long)
data <- read_excel(file)
data <- data[-1,-1:-2]
colnames(data) <- 1:15
for (i in 1:15){
data[,i] <- as.numeric(unlist(data[,i]))
zeros <- data[,i] < 170000
data[zeros, i] <- 1
}
colnames(data) <- c ("North America",
"Central America",
"South America",
"North Africa",
"Sub-Saharan Africa",
"Northern Europe",
"Western Europe",
"Southern Europe",
"Eastern Europe",
"Central Asia",
"Western Asia",
"South Asia",
"East Asia",
"South-East Asia",
"Oceania"   )
rownames(data) <- colnames(data)
# I need a long format
data_long <- data %>%
rownames_to_column %>%
gather(key = 'key', value = 'value', -rowname)
# parameters
circos.clear()
circos.par(start.degree = 90, gap.degree = 4, track.margin = c(-0.1, 0.1), points.overflow.warning = FALSE)
par(mar = rep(0, 4))
# color palette
mycolor <- viridis(10, alpha = 1, begin = 0, end = 1, option = "D")
mycolor <- mycolor[sample(1:10)]
# Base plot
chordDiagram(
x = data_long,
#grid.col = mycolor,
transparency = 0.25,
directional = 1,
direction.type = c("arrows", "diffHeight"),
diffHeight  = -0.04,
annotationTrack = "grid",
annotationTrackHeight = c(0.05, 0.1),
link.arr.type = "big.arrow",
link.sort = TRUE,
link.largest.ontop = TRUE)
# Add text and axis
circos.trackPlotRegion(
track.index = 1,
bg.border = NA,
panel.fun = function(x, y) {
xlim = get.cell.meta.data("xlim")
sector.index = get.cell.meta.data("sector.index")
# Add names to the sector.
circos.text(
x = mean(xlim),
y = 3.2,
labels = sector.index,
facing = "bending",
cex = 0.8
)
# Add graduation on axis
circos.axis(
h = "top",
major.at = seq(from = 0, to = xlim[2], by = ifelse(test = xlim[2]>10, yes = 2, no = 1)),
minor.ticks = 1,
major.tick.percentage = 0.5,
labels.niceFacing = FALSE)
}
)
